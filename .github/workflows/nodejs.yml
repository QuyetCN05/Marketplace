env:
  CI: false

name: Node.js CI

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches: [ 'main' ]

jobs:
  build_fe:

    name: Build Frontend
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 9.5.0
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'
          cache-dependency-path: './marketplace_client/pnpm-lock.yaml'

      - run: pnpm install
        working-directory: ./marketplace_client
      - run: pnpm build:prod
        working-directory: ./marketplace_client
  build-be:
    name: Build Backend
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 22.x ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: './marketplace_server/package-lock.json'


      - run: npm install
        working-directory: ./marketplace_server

      - run: npm run build
        working-directory: ./marketplace_server



  docker:

    needs: [build_fe, build-be]
    name: Docker Build and Push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN_TWO }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push FE
        uses: docker/build-push-action@v2
        with:
          context: ./marketplace_client
          file: ./marketplace_client/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fe:latest
        env:
          VITE_API_URL: ${{ secrets.VITE_API_URL }}
          VITE_GOOGLE_CLIENT_ID: ${{ secrets.VITE_GOOGLE_CLIENT_ID }}

      - name: Build and push Backend
        uses: docker/build-push-action@v2
        with:
          context: ./marketplace_server
          file: ./marketplace_server/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/be:latest
        env:
          TZ: ${{ secrets.TZ }}
          PORT: ${{ secrets.PORT }}
          HOST: ${{ secrets.HOST }}
          LOG_LEVEL: ${{ secrets.LOG_LEVEL }}
          APP_KEY: ${{ secrets.APP_KEY }}
          NODE_ENV: ${{ secrets.NODE_ENV }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
          CLOUDINARY_CLOUD_NAME: ${{ secrets.CLOUDINARY_CLOUD_NAME }}
          CLOUDINARY_FOLDER: ${{ secrets.CLOUDINARY_FOLDER }}
        

      - name: Build and push Nginx
        uses: docker/build-push-action@v3
        with:
          context: ./nginx
          file: ./nginx/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/proxy:latest
